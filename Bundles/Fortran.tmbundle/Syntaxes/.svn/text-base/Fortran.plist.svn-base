<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>f</string>
		<string>F</string>
		<string>f77</string>
		<string>F77</string>
		<string>f90</string>
		<string>F90</string>
		<string>f95</string>
		<string>F95</string>
		<string>for</string>
		<string>FOR</string>
		<string>fpp</string>
		<string>FPP</string>
		<string>dmod1</string>
		<string>dt</string>
	</array>
	<key>firstLineMatch</key>
	<string>(?i)-[*]- mode: f90 -[*]-</string>
	<key>foldingStartMarker</key>
	<string>^\s*(?i:(if|for|do|module(?!\s*procedure)|interface|type(?!\s*\()|subroutine|function))\s.*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*(?i:(end)).*$</string>
	<key>keyEquivalent</key>
	<string>^~F</string>
	<key>name</key>
	<string>Fortran</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?x)
                ( (?i:subroutine\s+) | (?i:function\s+) )
              	([A-Za-z_][A-Za-z0-9_:]*)
              	 \s*((\()(?=[^)\n]*))?
              </string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fortran</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(use|if|for|do|go\s*to|then|else|elseif|function|end|enddo|endif|contains|assign|backspace|call|close|continue|endfile|inquire|include|cycle|exit|open|print|read|return|rewind|stop|select|case|default|endselect|while|write))\b</string>
			<key>name</key>
			<string>keyword.control.fortran</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[Cc]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.c.fortran.punchcard-style</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[*]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.asterisk.fortran.modern</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>[!]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.exclamation.fortran.modern</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.apostrophe.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:data|double|block\sdata|double\sprecision|type(?=\s*\()|entry|equivalence|integer|real|character|intrinsic|logical|parameter)\b</string>
			<key>name</key>
			<string>storage.type.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(private|public|external|format|implicit|common|intent|in|out|inout))\b</string>
			<key>name</key>
			<string>storage.modifier.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(recursive|optional|interface|procedure|module|pointer|target))\b</string>
			<key>name</key>
			<string>keyword.other.fortran.90</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(program|save|subroutine|function|module|none))\b</string>
			<key>name</key>
			<string>keyword.other.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(r8|r4|TRUE|FALSE))\b</string>
			<key>name</key>
			<string>constant.language.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:(\.and\.|\.or\.|\.eq\.|\.lt\.|\.le\.|\.gt\.|\.ge\.|\.ne\.|\.not\.|\.eqv\.|\.neqv\.))</string>
			<key>name</key>
			<string>keyword.operator.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\=\=|\/\=|\&gt;\=|\&gt;|\&lt;|\&lt;\=|\%|\=\&gt;|\=|\:\:)</string>
			<key>name</key>
			<string>keyword.operator.fortran.90</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|([0-9\.]*_[ri][0-9]+)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.fortran</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)
        		^\s*\#\s*(define)\s+             # define
        		((?&lt;id&gt;[a-zA-Z_][a-zA-Z0-9_]*))  # macro name
        		\((
        			\s* \g&lt;id&gt; \s*              # first argument
        			(, \s* \g&lt;id&gt; \s*)*         # additional arguments
        		)\)
        	</string>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.tag.preprocessor.macro.fortran</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(#)\s*(include|import)\b\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.preprocessor.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.include.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.fortran</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.fortran</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.include.fortran</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.fortran</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.fortran</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.lt-gt.include.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(define|defined|elif|else|if|ifdef|ifndef|line|pragma|undef|endif)\b</string>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(dimension|function))\b</string>
			<key>name</key>
			<string>keyword.other.non-executable.fortran</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.fortran</string>
	<key>uuid</key>
	<string>45253F88-F7CC-49C5-9C32-F3FADD2AB579</string>
</dict>
</plist>
